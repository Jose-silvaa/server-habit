// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id   String @id @default(cuid())
  name String 
  email String @unique
  password String
  createdAt DateTime @default(now())
  habits Habit[]
  feedbacks Feedback[]

}


model Habit{

  id        String    @id @default(cuid())
  name      String    // Nome do hábito
  user      User      @relation(fields: [userId], references: [id])
  userId    String    // Chave estrangeira para o modelo User
  createdAt DateTime  @default(now()) // Data de criação do hábito

  cue       Cue       @relation(fields: [cueId], references: [id])
  routine   Routine   @relation(fields: [routineId], references: [id])
  reward    Reward    @relation(fields: [rewardId], references: [id])
  craving   Craving   @relation(fields: [cravingId], references: [id])

  cueId String
  routineId String
  rewardId String
  cravingId String
}

model Cue {
  id          String   @id @default(cuid())
  description String   // Descrição da deixa (gatilho)
  habits      Habit[]  // Relacionamento inverso com hábitos
}

model Routine {
  id          String   @id @default(cuid())
  description String   // Descrição da rotina
  habits      Habit[]  // Relacionamento inverso com hábitos
}

model Reward {
  id          String   @id @default(cuid())
  description String   // Descrição da recompensa
  habits      Habit[]  // Relacionamento inverso com hábitos
}

model Craving {
  id          String   @id @default(cuid())
  description String   // Descrição do anseio
  habits      Habit[]  // Relacionamento inverso com hábitos
}

model Feedback{
  id String @id @default(cuid())
  userId String   // Referência ao usuário que deu o feedback
  user User   @relation(fields: [userId], references: [id]) // Relacionamento com o User
  feedback String
  createdAt DateTime @default(now())

}
